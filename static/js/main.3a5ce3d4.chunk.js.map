{"version":3,"sources":["container/App.js","container/serviceWorker.js","index.js"],"names":["App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","clickMe","event","selected","toConsumableArray","state","images","picArr","score","topScore","label","toShake","title","target","textContent","info","includes","src","push","shuffle","setState","array","i","length","j","Math","floor","random","_ref","createTable","html","react_default","a","createElement","className","concat","alt","onClick","key","id","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_container_App","document","querySelector","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3a5ce3d4.chunk.js","sourcesContent":["import React, { Component } from 'react';\n// import logo from './logo.svg';\nimport './App.css';\n\nclass App extends Component {\n\n\tconstructor() {\n\t\t//you must call the Component constructor function using super(), before setting any properties in this class - this is a react standard\n\t\tsuper();\n\n\t\t//this is a react standard, you must call this.state\n\t\tthis.state = {\n\t\t\tpicArr : [\"thor.jpg\",\n\t\t\t\t\t  \"ironman.jpg\",\n\t\t\t\t\t  \"cap.jpg\",\n\t\t\t\t\t  \"marvel.jpg\",\n\t\t\t\t\t  \"okoye.jpg\",\n\t\t\t\t\t  \"blackwidow.jpg\",\n\t\t\t\t\t  \"hawkeye.jpg\",\n\t\t\t\t\t  \"antman.jpg\",\n\t\t\t\t\t  \"nebula.jpg\",\n\t\t\t\t\t  \"rocket.jpg\",\n\t\t\t\t\t  \"hulk.jpg\",\n\t\t\t\t\t  \"warmachine.jpg\"],\n\t\t\ttopScore: 0,\n\t\t\tselected: [],\n\t\t\tscore: 0,\n\t\t\tlabel: \"Click an image to begin!\",\n\t\t\ttoShake: \"\",\n\t\t\tinfo : \"dispHide\"\n\t\t}\n\t}\n\n\tclickMe = (event) => {\n\n\t\tlet selected = [...this.state.selected] //for images that are clicked\n\n\t\tlet images = [...this.state.picArr];\n\n\t\tlet score = this.state.score\n\n\t\tlet topScore = this.state.topScore\n\n\t\tlet label = this.state.label\n\n\t\tlet toShake = this.state.toShake\n\n\t\tlet title = event.target.textContent\n\n\t\tlet info = this.state.info\n\n\t\t//CHECKING\n\t\tif (title !== \"Clicky-Game\") {\n\t\t\tif (selected.includes(event.target.src)) {\n\n\t\t\t\tlabel = \"You've guessed incorrectly!\"\n\t\t\t\tscore = 0\n\t\t\t\tselected = []\n\t\t\t\t// event.target.className = \"animated shake faster\"\n\t\t\t\t// shaked = true\n\t\t\t\ttoShake = \"animated shake faster\"\n\t\t\t\tif (this.state.info === \"\")\n\t\t\t\t\tinfo = \"dispHide\"\n\n\t\t\t} else {\n\n\t\t\t\ttoShake = \"\"\t\t\t\n\t\t\t\tselected.push(event.target.src)\n\t\t\t\tscore++\n\n\t\t\t\tif (score === 12) {\n\n\t\t\t\t\ttopScore++\n\t\t\t\t\tlabel = \"You Won!\"\n\t\t\t\t\tscore = 0\n\t\t\t\t\tselected = []\n\n\t\t\t\t} else {\n\n\t\t\t\t\tlabel = \"You guessed correctly!\"\n\n\t\t\t\t\tif (score > topScore) {\n\t\t\t\t\t\ttopScore++\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttopScore = this.state.topScore\n\t\t\t\t\t  }\n\n\t\t\t\t  }\n\n\t\t\t  }\n\t\t} else {\n\n\t\t\t\tlabel = \"Click an image to begin!\"\n\t\t\t\tscore = 0\n\t\t\t\tselected = []\n\t\t\t\ttopScore = 0\n\n\t\t\t\tif (this.state.info === \"\")\n\t\t\t\t\tinfo = \"dispHide\"\n\t\t\t\telse \n\t\t\t\t\tinfo = \"\"\n\n\t\t  }\n\n\t\t// if (!shaked) {\n\t\t// \tthis.shuffle(this.state.picArr)\n\t\t// \tthis.setState( {\n\t\t// \t\timages,  \n\t\t// \t\ttopScore, \n\t\t// \t\tselected,\n\t\t// \t\tscore,\n\t\t// \t\tlabel\n\t\t// \t})\n\t\t// } else {\n\t\t// \tshaked = false\n\t\t// \tsetTimeout(\n\t\t// \t\tfunction() {\n\t\t// \t\t\tthis.shuffle(this.state.picArr)\n\t\t// \t\t\tthis.setState( {\n\t\t// \t\t\t\timages,  \n\t\t// \t\t\t\ttopScore, \n\t\t// \t\t\t\tselected,\n\t\t// \t\t\t\tscore,\n\t\t// \t\t\t\tlabel\n\t\t// \t\t\t})\n\t\t// \t\t}\n\t\t// \t\t.bind(this),700\n\t\t// \t)\n\t\t// }\n\n\t\tthis.shuffle(this.state.picArr)\n\t\tthis.setState( {\n\t\t\timages,  \n\t\t\ttopScore, \n\t\t\tselected,\n\t\t\tscore,\n\t\t\tlabel,\n\t\t\ttoShake,\n\t\t\tinfo\n\t\t})\n\n\t}\n \n\tshuffle = (array) => {\n\n\t\t//https://javascript.info/task/shuffle\n\n\t\tfor (let i = array.length - 1; i > 0; i--) {\n\t\t    let j = Math.floor(Math.random() * (i + 1));\n\t\t    [array[i], array[j]] = [array[j], array[i]];\n\t\t}\n\n\t}\n\n\tcreateTable = () => {\n\n\t\t//https://blog.cloudboost.io/for-loops-in-react-render-no-you-didnt-6c9f4aa73778\n\n\t\tlet html = []\n\n\t\tfor (let i = 1 ; i <= this.state.picArr.length; i++) {\n\t\t\thtml.push(<img className={this.state.toShake} src={`./images/${this.state.picArr[i-1]}`} alt={`./images/${this.state.picArr[i-1]}`} onClick={this.clickMe} key={i}/>)\n\t\t\t\t\n\t\t}\n\n\t\treturn html\n\n\t}\n\n  //this function must be called render\n  render() {\n\n    return (\n\n    \t<div id=\"parentContainer\">\n\t    \t<nav className=\"navbar navbar-expand-lg navbar-dark sticky-top\">\n\t\t\t\t<div className=\"container navContainer\">\n\t\t\t\t\t<div className=\"collapse navbar-collapse justify-content-center\" id=\"navbarNavDropdown\">\n\t\t\t\t\t\t<ul className=\"navbar-nav row hide-on-med-and-down\">\n\t\t\t\t\t\t\t<li className=\"nav-item col s4 gametitle\" onClick={this.clickMe}>Clicky-Game</li>\n\t\t\t\t\t\t\t<li className=\"nav-item col s4 center-align\">{this.state.label}</li>\n\t\t\t\t\t\t\t<li className=\"nav-item col s4 right-align\">\n\t\t\t\t\t\t\t\t<span>Score: {this.state.score}</span> | <span>Top Score: {this.state.topScore}</span>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t<ul className=\"navbar-nav row show-on-med-and-down hide-on-large-only hide-on-small-only\">\n\t\t\t\t\t\t\t<li className=\"nav-item col s4 gametitle\" onClick={this.clickMe}>Clicky-Game</li>\n\t\t\t\t\t\t\t<li className=\"nav-item col s4 center-align\">{this.state.label}</li>\n\t\t\t\t\t\t\t<li className=\"nav-item col s4 right-align\">\n\t\t\t\t\t\t\t\t<span>Score: {this.state.score}</span> | <span>Top Score: {this.state.topScore}</span>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t<ul className=\"navbar-nav row hide-on-med-and-up show-on-small-only\">\n\t\t\t\t\t\t\t<li className=\"nav-item col s4 gametitle\" onClick={this.clickMe}>Clicky-Game</li>\n\t\t\t\t\t\t\t<li className=\"nav-item col s4 center-align\">{this.state.label}</li>\n\t\t\t\t\t\t\t<li className=\"nav-item col s4 right-align\">\n\t\t\t\t\t\t\t\t<span>Score: {this.state.score}</span> | <span>Top Score: {this.state.topScore}</span>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</div>\n\t\t\t \t</div>\n\t\t\t</nav>\n\t\t\t<header className={`${this.state.info} center-align header`} id=\"gameInfo\">\n\t\t \t\t<h1>CLICKY GAME</h1>\n    \t\t\t<h2>Click on an image to earn points, but don't click on it any more than once!</h2>\n\t\t \t</header>\n\t    \t<div id=\"mainContainer\">\n\t    \t\t{this.createTable()}\n\t    \t</div>\n\t    \t<footer className=\"footer page-footer\">\t\n\t\t\t\t<div className=\"footer-copyright\">\n\t\t\t\t    <div className=\"container\">\n\t\t\t\t\t    <div className=\"col s12 center-align\">© 2019 Copyright</div>\n\t\t\t\t    </div>\n\t\t\t  </div>\n\t\t\t</footer>\n\t    </div>\n\n    );\n\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/containers/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './container/index.css';\nimport App from './container/App';\nimport * as serviceWorker from './container/serviceWorker';\n\n// $('#root');\nReactDOM.render(<App/>, document.querySelector('#root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}